#pragma once
#include <iostream>

/*
Разработать класс MyString
Класс должен содержать методы для ввода строк с клавиатуры и вывода строк на экран и деструктор.
Также нужно реализовать статическую функцию-член, которая будет возвращать количество созданных объектов-строк.
Класс должен содержать:
1. Конструктор по умолчанию, позволяющий создать строку длиной 80 символов;
2. Конструктор, позволяющий создавать строку произвольного размера (принимает количество символов, из которых будет состоять строка);
3. Конструктор, который создаёт строку и инициализирует её строкой, полученной в виде параметра этого конструктора;
4. Конструктор, который создаёт строку и инициализирует её строкой, полученной от пользователя (с клавиатуры).
5. Перегрузить оператор + (он будет работать как конкатенация строк)
6. Перегрузить оператор ++ (добавление к концу нашего объекта-строки одного символа 'x')
7. Перегрузить оператор -- (удаление одного символа из конца нашего объекта-строки)
8. Перегрузить оператор <
9. Перегрузка оператора + для ситуации: int + MyString (к строке ххх + MyString )
*/

class MYString                 // класс MYString
{                              
    char* String_;             // Строка 
    int Length_;               // Длина строки 
    static int creating_OBJ;   // Статическая функция (количество созданных объектов-строк)

public:
    MYString()                            // 1. (Конструктор по умолчанию, позволяющий создать строку длиной 80 символов)
    {                                     
        Length_ = 80;                     // Длина 80 символов 
        String_ = new char[Length_ + 1];  // Строка с размером 80 символов + '\0'
        creating_OBJ++;
    }

    void InpuT()                           // Функция ввода данных
    {
        if (String_ != nullptr)            // Делаем проверку 
        {
            delete[] String_;
        }
        char Input_String[40];
        std::cout << "Enter a line : ";
        std::cin.getline(Input_String, 40);
        Length_ = strlen(Input_String) + 1;
        String_ = new char[Length_];
        strcpy_s(String_, Length_, Input_String);
    }

    void OutPut()                          // Функция вывода данных
    {
        std::cout << "String received : " << String_ << std::endl;
    }

    static int Using_OBJ()
    {
        return creating_OBJ;
    }

    ~MYString()
    {
        creating_OBJ--;
        delete[] String_;
    }

};